"use strict";(self.webpackChunkrangoric_blog_and_website=self.webpackChunkrangoric_blog_and_website||[]).push([[457],{8196:function(e,t,l){l.r(t);var n=l(1151),o=l(7294),a=l(8183);function r(e){const t=Object.assign({h1:"h1",p:"p",code:"code",h2:"h2",ul:"ul",li:"li",a:"a",pre:"pre"},(0,n.ah)(),e.components);return o.createElement(o.Fragment,null,o.createElement(a.Z,{title:"Custom Fonts in Unity 3D's UI Toolkit - Wilson Gearld Mead III's Blog Posts"}),"\n",o.createElement(t.h1,null,"Custom Fonts in Unity 3D's UI Toolkit"),"\n",o.createElement(t.p,null,'You may be thinking "Just read the documentation" instead of reading another blog post on some random topic. Well, you\'re mostly right, but the new ',o.createElement(t.code,null,"UI Toolkit")," package for Unity3D is a work in progress, so the documentation isn't all that great for it."),"\n",o.createElement(t.p,null,"Also, I won't keep you long."),"\n",o.createElement(t.h2,null,"What Do You Need"),"\n",o.createElement(t.p,null,"The main file types we care about for this are:"),"\n",o.createElement(t.ul,null,"\n",o.createElement(t.li,null,o.createElement(t.code,null,".ttf")," file of the font you want to use."),"\n",o.createElement(t.li,null,o.createElement(t.code,null,".uss")," file. These are basically ",o.createElement(t.code,null,"css")," files, but more limited. ",o.createElement(t.a,{href:"https://forum.unity.com/threads/uss-and-uxml-support-in-visual-studio.663916/"},"Click here read how to setup Visual Studio")),"\n",o.createElement(t.li,null,o.createElement(t.code,null,".tss")," file. These are basically ",o.createElement(t.code,null,"css"),' files, but more limited. Yes same as above, and you can do the same thing to get them to "work well".'),"\n",o.createElement(t.li,null,o.createElement(t.code,null,".uxml")," file. These are supported mostly out of the box, but you can do a bit of the above as with ",o.createElement(t.code,null,".uss")," files if you like."),"\n"),"\n",o.createElement(t.p,null,"So for purposes of this example, I have the following files."),"\n",o.createElement(t.ul,null,"\n",o.createElement(t.li,null,o.createElement(t.code,null,"Alata-Regular.ttf")),"\n",o.createElement(t.li,null,o.createElement(t.code,null,"NewTSSFile.tss")),"\n",o.createElement(t.li,null,o.createElement(t.code,null,"NewUXMLTemplate.uxml")),"\n"),"\n",o.createElement(t.p,null,"I'm using the ",o.createElement(t.code,null,"tss")," file instead of a ",o.createElement(t.code,null,"uss")," file because they fill the same role, and I don't have enough to break it down just yet. If you want a ",o.createElement(t.code,null,"uss")," file, then go ahead, and you will add it to the ",o.createElement(t.code,null,"tss")," file in the Unity Inspector window for that ",o.createElement(t.code,null,"tss")," file."),"\n",o.createElement(t.p,null,"The other things you need are best made in Unity in the folder you have the above files in"),"\n",o.createElement(t.ul,null,"\n",o.createElement(t.li,null,o.createElement(t.code,null,"Create")," -> ",o.createElement(t.code,null,"UI Toolkit")," -> ",o.createElement(t.code,null,"Text Settings")),"\n",o.createElement(t.li,null,o.createElement(t.code,null,"Create")," -> ",o.createElement(t.code,null,"UI Toolkit")," -> ",o.createElement(t.code,null,"Panel Settings")),"\n"),"\n",o.createElement(t.p,null,"Now in the Inspector window for the ",o.createElement(t.code,null,"Panel Settings")," file you created, you will add your theme (",o.createElement(t.code,null,"tss"),") file and your ",o.createElement(t.code,null,"Text Settings")," file as the ",o.createElement(t.code,null,"Theme Style Sheet")," and ",o.createElement(t.code,null,"Text Settings")," respectively."),"\n",o.createElement(t.p,null,"Now in a Scene, add a gameobject of type ",o.createElement(t.code,null,"UIDocument")," (Right Click the Scene game object area, ",o.createElement(t.code,null,"UI-Toolkit")," -> ",o.createElement(t.code,null,"UIDocument"),")"),"\n",o.createElement(t.p,null,"For this object, you can assign ",o.createElement(t.code,null,"Panel Settings"),", and ",o.createElement(t.code,null,"Source Asset"),". You can assign the ",o.createElement(t.code,null,"Panel Settings")," as you suspect, and the ",o.createElement(t.code,null,"Source Asset")," is the ",o.createElement(t.code,null,"uxml")," file you made."),"\n",o.createElement(t.h2,null,"There's nothing about Fonts yet"),"\n",o.createElement(t.p,null,"I know, this is all the stuff that has to be set up for things to work."),"\n",o.createElement(t.p,null,"Now in the ",o.createElement(t.code,null,"tss")," file, we can use that font and it will work."),"\n",o.createElement(t.pre,null,o.createElement(t.code,null,"VisualElement {\n    -unity-font-definition: none;\n    -unity-font: url(Alata-Regular.ttf);\n}\n")),"\n",o.createElement(t.p,null,"This will force all elements to use that font. The ",o.createElement(t.code,null,"-unity-font-defintion: none;")," will show as a console error and I'm still sorting that out, but it still clears whatever inherited value would be there, allowing the next line to work. Also, anytime I change the font, I need this line."),"\n",o.createElement(t.h2,null,"That's it"),"\n",o.createElement(t.p,null,"Yeap, that's all that's needed. I'm still sorting out ",o.createElement(t.code,null,"UI Toolkit")," and how it works and what it means, but I'm normally a Web Developer, so I find it much easier to reason about than typical old school ui libraries."),"\n",o.createElement(t.h2,null,"Extras That I've noticed"),"\n",o.createElement(t.p,null,"Attaching fonts in the ",o.createElement(t.code,null,"tss")," file will actually make sure it's in the build. So after everything above is done, a build just works. Also, there are other ways to deal with fonts, but I was looking for low impact, ",o.createElement(t.code,null,"css")," like behaviour and it worked!"))}t.default=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,n.ah)(),e.components);return t?o.createElement(t,e,o.createElement(r,e)):r(e)}},1151:function(e,t,l){l.d(t,{ah:function(){return a}});var n=l(7294);const o=n.createContext({});function a(e){const t=n.useContext(o);return n.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}}}]);
//# sourceMappingURL=component---src-pages-blog-custom-fonts-with-unity-3-d-mdx-7300ea166588cfc32c84.js.map